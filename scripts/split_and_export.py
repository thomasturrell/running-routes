import os
import xml.etree.ElementTree as ET
from copy import deepcopy

# Determine base directory relative to script location
SCRIPT_DIR = os.path.dirname(os.path.abspath(__file__))
BASE_DIR = os.path.abspath(os.path.join(SCRIPT_DIR, ".."))

SRC = os.path.join(BASE_DIR, "src", "fell", "bob-graham-round", "bob-graham-round.gpx")
ARCHIVE_DIR = os.path.join(BASE_DIR, "docs", "bob-graham-round", "archive")
DEVICE_DIR = os.path.join(BASE_DIR, "docs", "bob-graham-round", "device-compatible")
AUTO_COMMENT = "Auto-generated by split_and_export.py â€” do not edit manually."

NS = {"default": "http://www.topografix.com/GPX/1/1"}
ET.register_namespace("", NS["default"])

def main():
    os.makedirs(ARCHIVE_DIR, exist_ok=True)
    os.makedirs(DEVICE_DIR, exist_ok=True)

    tree = ET.parse(SRC)
    root = tree.getroot()
    tracks = root.findall("default:trk", NS)

    for i, trk in enumerate(tracks, 1):
        gpx = ET.Element("gpx", root.attrib)
        gpx.append(ET.Comment(AUTO_COMMENT))
        gpx.append(deepcopy(trk))
        name_elem = trk.find("default:name", NS)
        base_name = name_elem.text.replace(" ", "-").lower() if name_elem is not None else f"leg-{i}"
        ET.ElementTree(gpx).write(os.path.join(ARCHIVE_DIR, f"{base_name}.gpx"), encoding="utf-8", xml_declaration=True)

        clean_trk = deepcopy(trk)
        ext = clean_trk.find("default:extensions", NS)
        if ext is not None:
            clean_trk.remove(ext)
        clean_gpx = ET.Element("gpx", root.attrib)
        clean_gpx.append(ET.Comment(AUTO_COMMENT))
        clean_gpx.append(clean_trk)
        ET.ElementTree(clean_gpx).write(os.path.join(DEVICE_DIR, f"{base_name}.gpx"), encoding="utf-8", xml_declaration=True)

    merged = ET.Element("gpx", root.attrib)
    merged.append(ET.Comment(AUTO_COMMENT))
    merged_trk = ET.SubElement(merged, "trk")
    ET.SubElement(merged_trk, "name").text = "Bob Graham Round (Merged)"
    for trk in tracks:
        for seg in trk.findall("default:trkseg", NS):
            merged_trk.append(deepcopy(seg))

    ET.ElementTree(deepcopy(merged)).write(os.path.join(ARCHIVE_DIR, "bob-graham-merged.gpx"), encoding="utf-8", xml_declaration=True)
    clean_merged_trk = merged.find("trk")
    clean_ext = clean_merged_trk.find("extensions")
    if clean_ext is not None:
        clean_merged_trk.remove(clean_ext)
    ET.ElementTree(merged).write(os.path.join(DEVICE_DIR, "bob-graham-merged.gpx"), encoding="utf-8", xml_declaration=True)

if __name__ == "__main__":
    main()
